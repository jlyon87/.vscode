{
    "TestClass": {
        "prefix": "testclass",
        "description": "Create a Test Class",
        "body": [
            "@IsTest",
            "private class $TM_FILENAME_BASE {",
            "",
            "\t@TestSetup",
            "\tstatic void setupData() {}",
            "",
            "\tstatic TestMethod void ${1:methodName}_given${2:X}_shouldGet${3:Y}() {",
            "\t\t$0",
            "\t}",
            "}"
        ]
    },
    "TestMethod": {
        "prefix": "testmethod",
        "description": "Create a new Test Method",
        "body": [
            "static TestMethod void ${1:methodName}_given${2:X}_shouldGet${3:Y}() {",
            "\t$0\n}"
        ]
    },
    "Apex Doc Header for Class": {
        "prefix": "apex-doc-class",
        "body": [
            "/**",
            "* @author ${1:author}",
            "* @date $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE",
            "*",
            "* @group ${2:group}",
            "* @group-content ${3:pathToDocContent}",
            "*",
            "* @description ${4:description}",
            "*/"
        ],
        "description": "Apex Doc Header for Class"
    },
    "Apex Doc Header for Method": {
        "prefix": "apex-doc-method",
        "body": [
            "/**",
            "* @description ${1:description}",
            "* @param ${2:param1}",
            "* @param ${3:param2}",
            "* @return ${4:return}",
            "* @example",
            "* ${5:example}",
            "*/"
        ],
        "description": "Apex Doc Header for Method"
    },
    "For Each Loop": {
        "prefix": "for-each",
        "body": [
            "for (${1:type} ${2:item} : ${3:collection}) {",
            "\t$0",
            "}"
        ],
        "description": "For Each Loop"
    },
    "If Else": {
        "prefix": "if-else",
        "body": [
            "if (${1:condition}) {",
            "\t$0",
            "} else {",
            "\t",
            "}"
        ],
        "description": "For Each Loop"
    },
    "SOQL": {
        "prefix": "soql",
        "description": "New SOQL Statement",
        "body": [
            "[",
            "\tSELECT Id,",
            "\t\t${1:Columns}",
            "\tFROM ${2:Table}];"
        ]
    },
    "DAMock": {
        "prefix": "DAMock",
        "body": [
            "public inherited sharing class $TM_FILENAME_BASE extends DmlBaseMock implements ${1:Interface} {",
            "\tprivate Map<Id, ${2:SObjectType}> ${3:CollectionName};",
            "\tpublic Boolean IsSuccess = true;",
                    "",
            "\tpublic $TM_FILENAME_BASE() {",
            "\t\tsuper(new Map<Id, $2>(), Schema.$2.SObjectType);",
            "\t\tthis.$3= (Map<Id, $2>)super.Records;",
            "\t}",
            "}",
            ""
        ],
        "description": "Stub out a Mock Class"
    }
}